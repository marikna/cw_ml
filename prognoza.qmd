---
title: "prognoza"
author: "Marysia"
format: 
  html:
    self-contained: true
    embed-resources: true
    toc: true
    toc-depth: 4
    toc-location: right
    toc-title: "Spis treści"
    number-sections: true
    number-depth: 4
    code-fold: show
    code-summary: "Show the code"
    code-tools: true
    code-block-bg: true
    code-block-border-left: "black"
    code-line-numbers: false
    code-copy: true
    html-math-method: katex
    smooth-scroll: true
    anchor-sections: true
    link-external-icon: true
    link-external-newwindow: true
    theme:
        light: cosmo
        dark: darkly
    fontsize: 1.0em
    linestretch: 1.5
execute:
  warning: false
  echo: true
  error: false
---
```{r}
library(GGally)
library(tidymodels)
library(parsnip)
```


```{r}
colnames(airquality) <- tolower(colnames(airquality))

air <-
  airquality |>
  as_tibble() |>
  na.omit() |> 
  select(-day) |> 
  mutate(month = factor(month)) 
```

```{r}
ggpairs(airquality[, c("ozone", "solar.r", "wind", "temp", "month")])
```
```{r}
air
```

```{r}
set.seed(111) 
n <- nrow(air)
train_id <- sample(seq_len(n), size = 0.8 * n)
```

```{r}
train_data <- air[train_id, ]
test_data  <- air[-train_id, ]
```

```{r}
model <- lm(ozone ~ solar.r + wind + temp + month, data = train_data)
model |> summary()
```
```{r}
predicted <- predict(model, newdata = test_data)
```

```{r}
results <- test_data |> 
  mutate(predicted_ozone = predicted)

results
```
```{r}
ggplot(results, aes(x = ozone, y = predicted_ozone)) +
  geom_point(color = "pink") +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "purple") +
  labs(title = "Predykcja wartości ozonu", x = "Rzeczywista wartość", y = "Przewidywana wartość") +
  theme_minimal()
```

