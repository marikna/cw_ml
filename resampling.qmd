---
title: "resampling"
author: "Marysia"
format: 
  html:
    self-contained: true
    embed-resources: true
    toc: true
    toc-depth: 4
    toc-location: right
    toc-title: "Spis treści"
    number-sections: true
    number-depth: 4
    code-fold: show
    code-summary: "Show the code"
    code-tools: true
    code-block-bg: true
    code-block-border-left: "black"
    code-line-numbers: false
    code-copy: true
    html-math-method: katex
    smooth-scroll: true
    anchor-sections: true
    link-external-icon: true
    link-external-newwindow: true
    theme:
        light: cosmo
        dark: darkly
    fontsize: 1.0em
    linestretch: 1.5
execute:
  warning: false
  echo: true
  error: false
---

```{r}
library(ranger)
library(modeldata)
library(tidymodels)
tidymodels_prefer()
```

```{r}
data("cells", package = "modeldata")
cells
```

```{r}
cells |> 
  count(class) |> 
  mutate(prop = n/sum(n) * 100 |> round(x = _, digits = 1))
```

```{r}
set.seed(123)
cell_split <- initial_split(data = cells |> select(-case),
                            strata = class, prop = 3/4)

cell_train <- training(cell_split)
cell_test <- testing(cell_split)
```

```{r}
nrow(cell_test) ; nrow(cell_train) # liczba
```

```{r}
nrow(cell_test)/nrow(cells) ; nrow(cell_train)/nrow(cells) # udział
```

```{r}
cell_test |> 
  count(class) |> 
  mutate(prop = n/sum(n))

cell_train |> 
  count(class) |> 
  mutate(prop = n/sum(n))
```

```{r}
rf_mod <- 
  rand_forest() |> 
  set_engine("ranger") |> 
  set_mode("classification")
```

```{r}
set.seed(234)
rf_fit <- 
  rf_mod |> 
  fit(class ~ ., data = cell_train)
rf_fit
```

```{r}
# Predykcja 
rf_pred_train <-
  predict(rf_fit, new_data = cell_train) |> 
  bind_cols(predict(rf_fit, new_data = cell_train, type = "prob")) |> 
  bind_cols(cell_train |> select(class))

# Krzywa ROC
rf_pred_train |> 
  roc_curve(truth = class, .pred_PS) |> 
  autoplot()
```
```{r}
rf_pred_test <- 
  predict(rf_fit, new_data = cell_test) |> 
  bind_cols(predict(rf_fit, new_data = cell_test, type = "prob")) |> 
  bind_cols(cell_test |> select(class))

# Krzywa rock
rf_pred_test |> 
  roc_curve(truth = class, .pred_PS) |> 
  autoplot()
```

```{r}
# Powierzchnia pod krzywą 
rf_pred_test |> 
  roc_auc(truth = class, .pred_PS)

# Dokładność
rf_pred_test |> 
  accuracy(truth = class, .pred_class)
```

```{r}
# 1) rsample - split

set.seed(123)
cell_split <- initial_split(data = cells |> select(-case),
                            strata = class, prop = 3/4)

cell_train <- training(cell_split)
cell_test <- testing(cell_split)

# 2) rsmaple - CV folds

set.seed(345)
folds <- vfold_cv(data = cell_train, v = 10)

# 3) parsnip - model

rf_mod <- 
  rand_forest() |> 
  set_engine("ranger") |> 
  set_mode("classification")

# print data
folds 
```
```{r}
# 4) workflow
rf_wf <- 
  workflow() |> 
  add_model(rf_mod) |> 
  add_formula(class ~ .)

# 5) tune 
set.seed(456)
rf_fit_rs <- 
  rf_wf |> 
  fit_resamples(folds)

rf_fit_rs
```

```{r}
rf_fit_rs |> 
  collect_metrics() |> 
  knitr::kable(digits = 3)
```

```{r}
bind_rows(
  rf_pred_test |>
    roc_auc(truth = class, .pred_PS),
  
  rf_pred_test |>
    accuracy(truth = class, .pred_class)
) |>
  knitr::kable(digits = 3)
```

